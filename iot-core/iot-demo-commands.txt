1
gcloud services enable cloudiot.googleapis.com
gcloud services enable pubsub.googleapis.com  #or pubsublite

2
git clone https://github.com/ecrane314/ce-demo.git
gcloud pubsub topics create $TOPIC
gcloud pubsub subscriptions create $SUBSCRIPTION --topic=$TOPIC

3
# Set PROJECT_ID   MY_REGION
gcloud iot registries create $REGISTRY \
    --project=$PROJECT_ID \
    --region=$MY_REGION \
    --event-notification-config=topic=projects/$PROJECT_ID/topics/$TOPIC

4
openssl req -x509 -newkey rsa:2048 -keyout rsa_private.pem -nodes \
    -out rsa_cert.pem -subj "/CN=unused"

5
gcloud iot devices create $DEVICE --region=$MY_REGION --registry=$REGISTRY \
    --public-key path=rsa_cert.pem,type=rs256

6 ===== # package this in a startup script, if you like
sudo apt install python3 python3-dev python3-venv python3-pip git \
    #install python and git
python3 -m venv env   #create virtual environment
git clone https://github.com/ecrane314/ce-demo.git
source env/bin/activate
source ce-demo/iot-core/config.sh

git clone https://github.com/GoogleCloudPlatform/python-docs-samples.git
cd, pip install -r requirements
cp private key .
curl https://pki.goog/roots.pem > roots.pem
===============


7
python cloudiot_mqtt_example.py \
    --registry_id=$REGISTRY \
    --cloud_region=$MY_REGION \
    --project_id=$PROJECT_ID \
    --device_id=$DEVICE \
    --algorithm=RS256 \
    --private_key_file=rsa_private.pem

 OR
  node cloudiot_mqtt_example_nodejs.js \
    mqttDeviceDemo \
    --projectId=ce-demo2 \
    --cloudRegion=us-central1 \
    --registryId= \
    --deviceId=laptop-device \
    --privateKeyFile=rsa_private.pem \
    --numMessages=25 \
    --algorithm=RS256

8
gcloud pubsub subscriptions pull --auto-ack projects/$PROJECT_ID/subscriptions/$SUBSCRIPTION